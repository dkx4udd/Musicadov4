{% comment %}
  Fixed Multilingual Cart Template - Working Discount Codes & Checkout
  Save this as: templates/cart.liquid
{% endcomment %}

<!-- Language Detection Script -->
<script>
window.shopifyCustomerData = {
  {% if customer %}
    countryCode: {{ customer.default_address.country_code | default: 'unknown' | json }},
  {% else %}
    countryCode: 'unknown',
  {% endif %}
  requestLocale: {{ request.locale.iso_code | json }}
};
</script>

<div class="cart-page">
  <div class="container">
    <h1 data-translate="cartPageTitle" class="cart-title">Your Order</h1>
    
    {% if cart.item_count > 0 %}
      <div class="cart-layout">
        <!-- Order Summary Section -->
        <div class="order-summary-section">
          <div class="card">
            <h2 data-translate="orderSummary">Order Summary</h2>
            
            {% for item in cart.items %}
              <div class="order-item">
                <div class="item-header">
                  <h3>{{ item.product.title }}</h3>
                  {% if item.variant.title != 'Default Title' %}
                    <span class="variant-title">{{ item.variant.title }}</span>
                  {% endif %}
                  <div class="item-price">
                    <span class="quantity">{{ item.quantity }}x</span>
                    <span class="price">{{ item.final_line_price | money }}</span>
                  </div>
                </div>
                
                <!-- Display custom properties (music order details) -->
                {% if item.properties %}
                  <div class="order-details">
                    {% for property in item.properties %}
                      {% unless property.first contains '_' %}
                        {% assign property_name = property.first %}
                        {% assign property_value = property.last %}
                        
                        <!-- Special formatting for different property types -->
                        {% if property_name contains 'Song' and property_name contains 'Words' %}
                          <div class="detail-item words-detail">
                            <strong>{{ property_name }}:</strong>
                            <span class="words-list">{{ property_value }}</span>
                          </div>
                        {% elsif property_name == 'Custom Lyrics/Story' %}
                          <div class="detail-item lyrics-detail">
                            <strong>{{ property_name }}:</strong>
                            <div class="lyrics-preview">{{ property_value | truncate: 200 }}</div>
                          </div>
                        {% else %}
                          <div class="detail-item">
                            <strong>{{ property_name }}:</strong> {{ property_value }}
                          </div>
                        {% endif %}
                      {% endunless %}
                    {% endfor %}
                  </div>
                {% endif %}
                
                <!-- Remove item link -->
                <div class="item-actions">
                  <a href="{{ item.url_to_remove }}" class="remove-item" data-translate="removeItem">
                    Remove Item
                  </a>
                </div>
              </div>
            {% endfor %}
            
            <!-- Cart Total -->
            <div class="cart-totals">
              <div class="subtotal-row">
                <span data-translate="subtotal">Subtotal:</span>
                <span>{{ cart.items_subtotal_price | money }}</span>
              </div>
              
              {% if cart.total_discount > 0 %}
                <div class="discount-row">
                  <span data-translate="discountApplied">Discount:</span>
                  <span>-{{ cart.total_discount | money }}</span>
                </div>
              {% endif %}
              
              <div class="total-row">
                <span data-translate="total">Total:</span>
                <span>{{ cart.total_price | money }}</span>
              </div>
              
              <div class="tax-note">
                <small data-translate="taxNote">Taxes and shipping calculated at checkout</small>
              </div>
            </div>
          </div>
        </div>

        <!-- Customer Details and Payment Section -->
        <div class="checkout-section">
          <!-- Customer Details Form -->
          <div class="card">
            <h3 data-translate="customerInformation">Customer Information</h3>
            <form id="customerDetailsForm">
              <div class="form-row">
                <div class="form-group">
                  <label for="firstName" data-translate="firstName">First Name *</label>
                  <input type="text" id="firstName" name="firstName" required>
                </div>
                <div class="form-group">
                  <label for="middleName" data-translate="middleName">Middle Name</label>
                  <input type="text" id="middleName" name="middleName">
                </div>
                <div class="form-group">
                  <label for="lastName" data-translate="lastName">Last Name *</label>
                  <input type="text" id="lastName" name="lastName" required>
                </div>
              </div>

              <div class="form-row">
                <div class="form-group">
                  <label for="customerEmail" data-translate="emailAddress">Email Address *</label>
                  <input type="email" id="customerEmail" name="customerEmail" required>
                </div>
                <div class="form-group">
                  <label for="mobilePhone" data-translate="phoneNumber">Phone Number *</label>
                  <input type="tel" id="mobilePhone" name="mobilePhone" required data-translate-placeholder="phonePlaceholder">
                </div>
              </div>

              <div class="form-group">
                <div class="delivery-info-box">
                  <h4 data-translate="musicDeliveryTitle">📧 Music Delivery Information</h4>
                  <p data-translate="musicDeliveryDescription">We will send you a link via email to your personal page where you can download your music within 24 hours.</p>
                </div>
              </div>
            </form>
          </div>

          <!-- Discount Code Section -->
          <div class="card discount-card" id="discountCard">
            <h3 data-translate="discountCodeTitle">Discount Code</h3>
            <div class="discount-input-container">
              <input 
                type="text" 
                id="discountCodeInput" 
                name="discountCode" 
                data-translate-placeholder="discountCodePlaceholder"
                placeholder="Enter discount code (e.g. MUSIC15)"
                style="text-transform: uppercase;"
              >
              <button type="button" id="applyDiscountBtn" class="btn discount-apply-btn" data-translate="applyDiscount">
                Apply
              </button>
            </div>
            <div id="discountMessage" class="discount-message" style="display: none;"></div>
            
            <div class="discount-help">
              <p data-translate="discountHelp">💡 Have a discount code from our popup? Paste it here to save on your order!</p>
            </div>
            
            <!-- Show applied discount -->
            {% if cart.total_discount > 0 %}
              <div class="applied-discount">
                <div class="discount-success">
                  <span class="success-icon">✅</span>
                  <span data-translate="discountAppliedSuccess">Discount applied!</span>
                  <span class="discount-amount">-{{ cart.total_discount | money }}</span>
                </div>
              </div>
            {% endif %}
          </div>

          <!-- Terms and Conditions -->
          <div class="card">
            <div class="terms-agreement">
              <div class="terms-checkbox">
                <input type="checkbox" id="agreeTerms" name="agreeTerms" required>
                <label for="agreeTerms">
                  <span data-translate="agreeTerms">I agree with the terms and conditions and privacy policy</span>
                  <a href="#" id="privacyPolicyLink" class="privacy-link" data-translate="privacyPolicyLink">
                    Read our privacy policy
                  </a>
                </label>
              </div>
            </div>
          </div>

          <!-- Important Information -->
          <div class="card">
            <div class="info-box">
              <h4 data-translate="importantInformation">Important Information</h4>
              <ul class="info-list">
                <li data-translate="deliveryInfo">You will receive an email link to download your music within 24 hours</li>
                <li data-translate="personalUseInfo">Songs are for personal use only (contact us for commercial use)</li>
                <li data-translate="spotifyInfo">We can publish your song on Spotify upon request</li>
                <li data-translate="contactInfo">
                  Any questions? Contact us at: 
                  <a href="mailto:contact@{{ shop.domain }}" class="contact-link">
                    contact@{{ shop.domain }}
                  </a>
                </li>
              </ul>
            </div>
          </div>

          <!-- Checkout Actions -->
          <div class="checkout-actions">
            <button type="button" id="checkoutBtn" class="btn checkout-btn" data-processing="false">
              <span class="button-text" data-translate="completeOrderPay">Complete Order & Pay</span>
              <span class="button-loading" style="display: none;">
                <span class="loading-spinner"></span>
                <span data-translate="processing">Processing...</span>
              </span>
            </button>
            
            <a href="{{ routes.root_url }}" class="btn continue-shopping" data-translate="continueShopping">
              Continue Shopping
            </a>
          </div>

          <!-- Payment Error Display -->
          <div id="paymentError" class="payment-error" style="display: none;">
            <div class="error-icon">⚠️</div>
            <p class="error-message"></p>
            <button type="button" id="retryPaymentBtn" class="btn btn-secondary" data-translate="tryAgain">
              Try Again
            </button>
          </div>
        </div>
      </div>
      
    {% else %}
      <div class="empty-cart">
        <div class="empty-cart-icon">🛒</div>
        <h2 data-translate="emptyCartTitle">Your cart is empty</h2>
        <p data-translate="emptyCartDescription">You haven't added any items to your cart yet.</p>
        <a href="{{ routes.root_url }}" class="btn" data-translate="startShopping">Start Shopping</a>
      </div>
    {% endif %}
  </div>
</div>

<!-- Include the main Musicado script -->
<script src="{{ 'musicado.js' | asset_url }}" defer></script>

<!-- FIXED cart JavaScript with working discount codes and checkout -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('🚀 Cart page initializing...');
  
  // Language management
  const LANGUAGE_KEY = 'musicado_language';
  const FORM_DATA_KEY = 'musicado_cart_form_data';
  
  // Get saved language
  function getSavedLanguage() {
    const saved = localStorage.getItem(LANGUAGE_KEY);
    if (saved) {
      console.log('📱 Found saved language:', saved);
      return saved;
    }
    
    // Enhanced Dutch detection
    function isDutchCustomer() {
      // Browser language check
      const languages = navigator.languages || [navigator.language];
      for (const lang of languages) {
        if (lang.toLowerCase().startsWith('nl')) {
          console.log('🇳🇱 Dutch language detected:', lang);
          return true;
        }
      }
      
      // Timezone check
      const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
      if (timezone === 'Europe/Amsterdam') {
        console.log('🇳🇱 Dutch timezone detected');
        return true;
      }
      
      return false;
    }
    
    return isDutchCustomer() ? 'nl' : 'en';
  }
  
  const currentLang = getSavedLanguage();
  console.log('🎯 Using language:', currentLang);
  
  // Cart-specific translations
  const cartTranslations = {
    en: {
      cartPageTitle: "Your Order",
      orderSummary: "Order Summary", 
      removeItem: "Remove Item",
      subtotal: "Subtotal:",
      discountApplied: "Discount:",
      total: "Total:",
      taxNote: "Taxes and shipping calculated at checkout",
      customerInformation: "Customer Information",
      firstName: "First Name *",
      middleName: "Middle Name",
      lastName: "Last Name *",
      emailAddress: "Email Address *",
      phoneNumber: "Phone Number *",
      phonePlaceholder: "+31 6 12345678",
      musicDeliveryTitle: "📧 Music Delivery Information",
      musicDeliveryDescription: "We will send you a link via email to your personal page where you can download your music within 24 hours.",
      discountCodeTitle: "Discount Code",
      discountCodePlaceholder: "Enter discount code (e.g. MUSIC15)",
      applyDiscount: "Apply",
      discountHelp: "💡 Have a discount code from our popup? Paste it here to save on your order!",
      discountAppliedSuccess: "Discount applied!",
      agreeTerms: "I agree with the terms and conditions and privacy policy",
      privacyPolicyLink: "Read our privacy policy",
      importantInformation: "Important Information",
      deliveryInfo: "You will receive an email link to download your music within 24 hours",
      personalUseInfo: "Songs are for personal use only (contact us for commercial use)",
      spotifyInfo: "We can publish your song on Spotify upon request",
      contactInfo: "Any questions? Contact us at:",
      completeOrderPay: "Complete Order & Pay",
      processing: "Processing...",
      continueShopping: "Continue Shopping",
      tryAgain: "Try Again",
      emptyCartTitle: "Your cart is empty",
      emptyCartDescription: "You haven't added any items to your cart yet.",
      startShopping: "Start Shopping",
      
      // Validation and error messages
      pleaseComplete: "Please complete the following:",
      validEmail: "Valid email address",
      agreeToTerms: "Agreement with terms and conditions",
      enterDiscountCode: "Please enter a discount code.",
      invalidDiscountCode: "Invalid discount code. Please check and try again.",
      discountAppliedMessage: "Discount applied successfully!",
      processingError: "An error occurred. Please try again.",
      redirectingToCheckout: "Redirecting to checkout..."
    },
    nl: {
      cartPageTitle: "Uw Bestelling",
      orderSummary: "Bestelling Overzicht",
      removeItem: "Item Verwijderen", 
      subtotal: "Subtotaal:",
      discountApplied: "Korting:",
      total: "Totaal:",
      taxNote: "Belastingen en verzendkosten worden berekend bij het afrekenen",
      customerInformation: "Klantgegevens",
      firstName: "Voornaam *",
      middleName: "Tussenvoegsel",
      lastName: "Achternaam *",
      emailAddress: "E-mailadres *",
      phoneNumber: "Telefoonnummer *",
      phonePlaceholder: "+31 6 12345678",
      musicDeliveryTitle: "📧 Muziek Levering Informatie",
      musicDeliveryDescription: "We sturen u binnen 24 uur een link via e-mail naar uw persoonlijke pagina waar u uw muziek kunt downloaden.",
      discountCodeTitle: "Kortingscode",
      discountCodePlaceholder: "Voer kortingscode in (bijv. MUSIC15)",
      applyDiscount: "Toepassen",
      discountHelp: "💡 Heeft u een kortingscode van onze popup? Plak deze hier om te besparen op uw bestelling!",
      discountAppliedSuccess: "Korting toegepast!",
      agreeTerms: "Ik ga akkoord met de algemene voorwaarden en privacybeleid",
      privacyPolicyLink: "Lees ons privacybeleid",
      importantInformation: "Belangrijke Informatie",
      deliveryInfo: "U ontvangt binnen 24 uur een e-mail link om uw muziek te downloaden",
      personalUseInfo: "Liedjes zijn alleen voor persoonlijk gebruik (neem contact op voor commercieel gebruik)",
      spotifyInfo: "We kunnen uw liedje op verzoek op Spotify publiceren",
      contactInfo: "Vragen? Neem contact met ons op:",
      completeOrderPay: "Bestelling Voltooien & Betalen",
      processing: "Verwerken...",
      continueShopping: "Verder Winkelen",
      tryAgain: "Probeer Opnieuw",
      emptyCartTitle: "Uw winkelwagen is leeg",
      emptyCartDescription: "U heeft nog geen items aan uw winkelwagen toegevoegd.",
      startShopping: "Begin met Winkelen",
      
      // Validation and error messages in Dutch
      pleaseComplete: "Vul de volgende verplichte velden in:",
      validEmail: "Geldig e-mailadres",
      agreeToTerms: "Akkoord met algemene voorwaarden",
      enterDiscountCode: "Voer een kortingscode in.",
      invalidDiscountCode: "Ongeldige kortingscode. Controleer en probeer opnieuw.",
      discountAppliedMessage: "Korting succesvol toegepast!",
      processingError: "Er is een fout opgetreden. Probeer het opnieuw.",
      redirectingToCheckout: "Doorverwijzen naar afrekenen..."
    }
  };

  // Apply translations
  function applyTranslations(lang) {
    console.log('🌐 Applying cart translations for:', lang);
    const translations = cartTranslations[lang];
    if (!translations) return;
    
    document.querySelectorAll('[data-translate]').forEach(element => {
      const key = element.dataset.translate;
      if (translations[key]) {
        element.textContent = translations[key];
      }
    });
    
    document.querySelectorAll('[data-translate-placeholder]').forEach(element => {
      const key = element.dataset.translatePlaceholder;
      if (translations[key]) {
        element.placeholder = translations[key];
      }
    });
  }

  // Get translation
  function getTranslation(key) {
    const translations = cartTranslations[currentLang];
    return translations && translations[key] ? translations[key] : cartTranslations.en[key] || key;
  }

  // Form data management
  function saveFormData() {
    const formData = {};
    const form = document.getElementById('customerDetailsForm');
    if (form) {
      const inputs = form.querySelectorAll('input');
      inputs.forEach(input => {
        if (input.type !== 'submit' && input.type !== 'button') {
          formData[input.name] = input.value;
        }
      });
      
      const termsCheckbox = document.getElementById('agreeTerms');
      if (termsCheckbox) {
        formData.agreeTerms = termsCheckbox.checked;
      }
      
      localStorage.setItem(FORM_DATA_KEY, JSON.stringify(formData));
    }
  }

  function restoreFormData() {
    try {
      const savedData = localStorage.getItem(FORM_DATA_KEY);
      if (savedData) {
        const formData = JSON.parse(savedData);
        
        Object.entries(formData).forEach(([name, value]) => {
          if (name === 'agreeTerms') {
            const termsCheckbox = document.getElementById('agreeTerms');
            if (termsCheckbox && value) {
              termsCheckbox.checked = value;
            }
          } else {
            const input = document.querySelector(`[name="${name}"]`);
            if (input && value) {
              input.value = value;
            }
          }
        });
      }
    } catch (error) {
      console.error('Error restoring form data:', error);
    }
  }

  function clearFormData() {
    localStorage.removeItem(FORM_DATA_KEY);
  }

  // Validation
  function validateCustomerDetails() {
    const requiredFields = ['firstName', 'lastName', 'customerEmail', 'mobilePhone'];
    let isValid = true;
    let missingFields = [];

    requiredFields.forEach(fieldName => {
      const field = document.getElementById(fieldName);
      if (!field || !field.value.trim()) {
        isValid = false;
        const label = getTranslation(fieldName);
        missingFields.push(label);
        if (field) {
          field.style.borderColor = '#ef4444';
          field.style.background = 'rgba(239, 68, 68, 0.1)';
        }
      } else {
        if (field) {
          field.style.borderColor = '';
          field.style.background = '';
        }
      }
    });

    // Check terms agreement
    const termsCheckbox = document.getElementById('agreeTerms');
    const termsCard = document.querySelector('.terms-agreement');
    if (!termsCheckbox || !termsCheckbox.checked) {
      isValid = false;
      missingFields.push(getTranslation('agreeToTerms'));
      if (termsCard) {
        termsCard.style.borderColor = '#ef4444';
        termsCard.style.background = 'rgba(239, 68, 68, 0.05)';
      }
    } else {
      if (termsCard) {
        termsCard.style.borderColor = '';
        termsCard.style.background = '';
      }
    }

    // Validate email format
    const emailField = document.getElementById('customerEmail');
    if (emailField && emailField.value) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(emailField.value)) {
        isValid = false;
        missingFields.push(getTranslation('validEmail'));
        emailField.style.borderColor = '#ef4444';
        emailField.style.background = 'rgba(239, 68, 68, 0.1)';
      }
    }

    if (!isValid) {
      const message = getTranslation('pleaseComplete') + '\n• ' + missingFields.join('\n• ');
      alert(message);
      
      // Scroll to first error field
      const firstErrorField = document.querySelector('input[style*="border-color: rgb(239, 68, 68)"], .terms-agreement[style*="border-color: rgb(239, 68, 68)"]');
      if (firstErrorField) {
        firstErrorField.scrollIntoView({ behavior: 'smooth', block: 'center' });
      }
    }

    return isValid;
  }

  // Button state management
  function setButtonLoading(isLoading) {
    const checkoutBtn = document.getElementById('checkoutBtn');
    if (!checkoutBtn) return;

    if (isLoading) {
      checkoutBtn.disabled = true;
      checkoutBtn.setAttribute('data-processing', 'true');
      const textSpan = checkoutBtn.querySelector('.button-text');
      const loadingSpan = checkoutBtn.querySelector('.button-loading');
      if (textSpan) textSpan.style.display = 'none';
      if (loadingSpan) loadingSpan.style.display = 'inline-flex';
    } else {
      checkoutBtn.disabled = false;
      checkoutBtn.setAttribute('data-processing', 'false');
      const textSpan = checkoutBtn.querySelector('.button-text');
      const loadingSpan = checkoutBtn.querySelector('.button-loading');
      if (textSpan) textSpan.style.display = 'inline';
      if (loadingSpan) loadingSpan.style.display = 'none';
    }
  }

  // Show success message
  function showSuccessMessage(message) {
    const notification = document.createElement('div');
    notification.className = 'success-notification';
    notification.innerHTML = `
      <div class="success-icon">✅</div>
      <div class="success-text">${message}</div>
    `;
    
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
      color: white;
      padding: 1rem 1.5rem;
      border-radius: 12px;
      box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
      z-index: 10000;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      font-weight: 600;
      animation: slideInRight 0.3s ease-out;
      max-width: 300px;
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 3000);
  }

  // Show discount message
  function showDiscountMessage(type, message) {
    const messageDiv = document.getElementById('discountMessage');
    if (messageDiv) {
      messageDiv.className = `discount-message ${type}`;
      messageDiv.textContent = message;
      messageDiv.style.display = 'block';
    }
  }

  // FIXED: Apply discount code using proper Shopify method
  function applyDiscountCode() {
    const codeInput = document.getElementById('discountCodeInput');
    const applyBtn = document.getElementById('applyDiscountBtn');
    
    if (!codeInput || !applyBtn) return;
    
    const code = codeInput.value.trim().toUpperCase();
    
    if (!code) {
      showDiscountMessage('error', getTranslation('enterDiscountCode'));
      return;
    }
    
    // Disable button and show loading
    applyBtn.disabled = true;
    const originalText = applyBtn.textContent;
    applyBtn.textContent = getTranslation('processing');
    
    console.log('Applying discount code:', code);
    
    // Save form data before redirect
    saveFormData();
    
    // Validate discount codes
    const validCodes = ['MUSIC15', '15MUSIC', 'WELCOME15', 'SAVE15'];
    
    if (validCodes.includes(code)) {
      // Use Shopify's discount URL - this is the correct method
      console.log('Valid discount code, redirecting with discount...');
      showDiscountMessage('success', getTranslation('discountAppliedMessage'));
      
      // Redirect to apply discount using Shopify's standard method
      setTimeout(() => {
        window.location.href = `/discount/${encodeURIComponent(code)}?redirect=${encodeURIComponent('/cart')}`;
      }, 500);
      
    } else {
      console.log('Invalid discount code:', code);
      showDiscountMessage('error', getTranslation('invalidDiscountCode'));
      applyBtn.disabled = false;
      applyBtn.textContent = originalText;
    }
  }

  // FIXED: Checkout process
  function processCheckout() {
    if (!validateCustomerDetails()) {
      return false;
    }

    setButtonLoading(true);
    
    try {
      // Save customer details for later use
      const customerForm = document.getElementById('customerDetailsForm');
      const customerData = new FormData(customerForm);
      const customerDetails = {};
      for (let [key, value] of customerData.entries()) {
        customerDetails[key] = value;
      }

      // Save customer details in localStorage for the order
      localStorage.setItem('musicado_customer_details', JSON.stringify(customerDetails));
      
      // Show success message
      showSuccessMessage(getTranslation('redirectingToCheckout'));
      
      // Clear form data since we're completing the order
      clearFormData();
      
      // Redirect to Shopify's standard checkout
      setTimeout(() => {
        window.location.href = '/checkout';
      }, 1000);

    } catch (error) {
      console.error('Checkout processing error:', error);
      setButtonLoading(false);
      alert(getTranslation('processingError'));
      return false;
    }
  }

  // Setup event listeners
  function setupEventListeners() {
    const checkoutBtn = document.getElementById('checkoutBtn');
    const applyDiscountBtn = document.getElementById('applyDiscountBtn');
    const discountInput = document.getElementById('discountCodeInput');
    const form = document.getElementById('customerDetailsForm');

    if (checkoutBtn) {
      checkoutBtn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        processCheckout();
      });
    }

    if (applyDiscountBtn) {
      applyDiscountBtn.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        applyDiscountCode();
      });
    }

    if (discountInput) {
      discountInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          applyDiscountCode();
        }
      });
    }

    // Auto-save form data on input
    if (form) {
      form.addEventListener('input', saveFormData);
      form.addEventListener('change', saveFormData);
    }
    
    const termsCheckbox = document.getElementById('agreeTerms');
    if (termsCheckbox) {
      termsCheckbox.addEventListener('change', saveFormData);
    }

    // Auto-clear validation errors on input
    const formInputs = document.querySelectorAll('#customerDetailsForm input');
    formInputs.forEach(input => {
      input.addEventListener('input', function() {
        if (this.style.borderColor === 'rgb(239, 68, 68)') {
          this.style.borderColor = '';
          this.style.background = '';
        }
      });
    });

    // Clear terms validation error on check
    if (termsCheckbox) {
      termsCheckbox.addEventListener('change', function() {
        const termsCard = document.querySelector('.terms-agreement');
        if (this.checked && termsCard) {
          termsCard.style.borderColor = '';
          termsCard.style.background = '';
        }
      });
    }

    // Privacy policy link
    const privacyLink = document.getElementById('privacyPolicyLink');
    if (privacyLink) {
      privacyLink.addEventListener('click', function(e) {
        e.preventDefault();
        // Open privacy modal if available, or link to privacy page
        if (document.getElementById('privacyModal')) {
          document.getElementById('privacyModal').style.display = 'block';
        } else {
          // Fallback to external privacy page
          window.open('/pages/privacy-policy', '_blank');
        }
      });
    }
  }

  // Initialize everything
  function initialize() {
    console.log('🎯 Initializing cart with language:', currentLang);
    
    // Apply initial translations
    applyTranslations(currentLang);
    
    // Setup form handling
    restoreFormData();
    setupEventListeners();
    
    // Update language buttons in header
    const activeBtn = document.querySelector(`header [data-lang="${currentLang}"]`);
    if (activeBtn) {
      document.querySelectorAll('header .lang-btn').forEach(btn => btn.classList.remove('active'));
      activeBtn.classList.add('active');
    }
    
    // Check for discount success parameter
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('discount_applied') || urlParams.get('discount') === 'success') {
      showDiscountMessage('success', getTranslation('discountAppliedMessage'));
      
      // Clean up URL
      const newUrl = window.location.pathname;
      window.history.replaceState({}, document.title, newUrl);
    }
    
    console.log('🎉 Cart page initialization complete');
  }

  // Start initialization
  initialize();
});
</script>

<!-- Cart page styles -->
<style>
/* Cart page specific styles */
.cart-page {
  padding: 80px 0 40px 0;
  background: linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #334155 100%);
  min-height: 70vh;
  position: relative;
}

.cart-page::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

.cart-title,
.cart-page h1 {
  text-align: center;
  margin-bottom: 40px;
  font-size: 2.5rem;
  color: #e2e8f0 !important;
  font-weight: 700;
  text-shadow: 2px 2px 8px rgba(0,0,0,0.6);
  background: none !important;
  opacity: 1 !important;
}

.container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 0 20px;
}

.cart-layout {
  display: grid;
  grid-template-columns: 1fr 400px;
  gap: 40px;
}

.card {
  background: rgba(30, 41, 59, 0.4);
  backdrop-filter: blur(25px) saturate(180%);
  border-radius: 20px;
  padding: 2rem;
  margin-bottom: 2rem;
  box-shadow: 
    0 20px 50px rgba(0,0,0,0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1),
    0 0 0 1px rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(59, 130, 246, 0.2);
  color: #e2e8f0;
  transition: all 0.3s ease;
}

.card h2, .card h3 {
  color: #06b6d4;
  margin-bottom: 1.5rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.card h2::before {
  content: "📋";
  font-size: 1.2em;
}

.card h3::before {
  content: "👤";
  font-size: 1.2em;
}

.discount-card h3::before {
  content: "🎫";
  font-size: 1.2em;
}

.order-item {
  padding: 20px 0;
  border-bottom: 1px solid rgba(59, 130, 246, 0.2);
  transition: all 0.3s ease;
}

.order-item:last-child {
  border-bottom: none;
}

.order-item:hover {
  background: rgba(59, 130, 246, 0.05);
  border-radius: 12px;
  padding: 20px 15px;
}

.item-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 15px;
}

.item-header h3 {
  color: #06b6d4;
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  flex: 1;
}

.item-header h3::before {
  content: "🎵";
  margin-right: 0.5rem;
}

.variant-title {
  color: #94a3b8;
  font-weight: 500;
  margin-left: 10px;
  font-size: 0.9rem;
}

.item-price {
  text-align: right;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 4px;
}

.quantity {
  color: #94a3b8;
  font-size: 0.9rem;
  font-weight: 500;
}

.price {
  font-size: 1.25rem;
  font-weight: 700;
  color: #06b6d4;
  text-shadow: 0 0 10px rgba(6, 182, 212, 0.3);
}

.order-details {
  background: rgba(59, 130, 246, 0.1);
  padding: 15px;
  border-radius: 12px;
  border: 1px solid rgba(59, 130, 246, 0.2);
  margin-bottom: 15px;
  backdrop-filter: blur(10px);
}

.detail-item {
  margin-bottom: 8px;
  font-size: 0.9rem;
  color: #cbd5e1;
  line-height: 1.5;
}

.detail-item:last-child {
  margin-bottom: 0;
}

.detail-item strong {
  color: #e2e8f0;
  font-weight: 600;
}

.words-detail {
  background: rgba(6, 182, 212, 0.1);
  padding: 10px 12px;
  border-radius: 8px;
  border: 1px solid rgba(6, 182, 212, 0.2);
  margin: 8px 0;
}

.words-list {
  background: rgba(6, 182, 212, 0.2);
  padding: 4px 8px;
  border-radius: 6px;
  font-style: italic;
  font-weight: 500;
}

.lyrics-detail {
  background: rgba(251, 191, 36, 0.1);
  padding: 12px;
  border-radius: 8px;
  border: 1px solid rgba(251, 191, 36, 0.3);
  margin: 8px 0;
}

.lyrics-preview {
  background: rgba(15, 23, 42, 0.6);
  padding: 10px;
  border-radius: 8px;
  border-left: 3px solid #fbbf24;
  font-style: italic;
  line-height: 1.5;
  margin-top: 8px;
  color: #f1f5f9;
  font-size: 0.9rem;
}

.item-actions {
  text-align: right;
  margin-top: 10px;
}

.remove-item {
  color: #ef4444;
  font-size: 0.9rem;
  text-decoration: underline;
  transition: all 0.3s ease;
  font-weight: 500;
}

.remove-item:hover {
  color: #dc2626;
  text-shadow: 0 0 8px rgba(239, 68, 68, 0.3);
}

.cart-totals {
  background: rgba(15, 23, 42, 0.6);
  padding: 20px;
  border-radius: 16px;
  border: 1px solid rgba(59, 130, 246, 0.3);
  margin-top: 20px;
  backdrop-filter: blur(15px);
}

.subtotal-row, .discount-row, .total-row {
  display: flex;
  justify-content: space-between;
  padding: 8px 0;
  font-size: 1rem;
}

.discount-row {
  color: #10b981;
  font-weight: 600;
}

.discount-row::before {
  content: "💰";
  margin-right: 0.5rem;
}

.total-row {
  border-top: 2px solid rgba(59, 130, 246, 0.3);
  font-size: 1.2rem;
  font-weight: 700;
  color: #06b6d4;
  margin-top: 10px;
  padding-top: 15px;
  text-shadow: 0 0 10px rgba(6, 182, 212, 0.3);
}

.tax-note {
  text-align: center;
  margin-top: 10px;
  padding-top: 10px;
  border-top: 1px solid rgba(59, 130, 246, 0.2);
}

.tax-note small {
  color: #94a3b8;
  font-style: italic;
}

.form-row {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  color: #f1f5f9;
  font-size: 0.95rem;
}

.form-group input,
.form-group select,
.form-group textarea {
  width: 100%;
  padding: 14px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 12px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: rgba(15, 23, 42, 0.4);
  backdrop-filter: blur(10px);
  color: #e2e8f0;
  box-shadow: 
    inset 0 1px 3px rgba(0, 0, 0, 0.2),
    0 1px 0 rgba(255, 255, 255, 0.05);
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
  outline: none;
  border-color: rgba(59, 130, 246, 0.6);
  box-shadow: 
    0 0 0 3px rgba(59, 130, 246, 0.1),
    inset 0 1px 3px rgba(0, 0, 0, 0.2),
    0 0 20px rgba(59, 130, 246, 0.2);
  background: rgba(15, 23, 42, 0.6);
  transform: translateY(-1px);
}

.form-group input::placeholder {
  color: #94a3b8;
}

.delivery-info-box {
  background: rgba(59, 130, 246, 0.1);
  border: 2px solid rgba(59, 130, 246, 0.3);
  border-radius: 12px;
  padding: 1.5rem;
  text-align: center;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.delivery-info-box:hover {
  background: rgba(59, 130, 246, 0.15);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.2);
}

.delivery-info-box h4 {
  color: #06b6d4;
  margin-bottom: 0.5rem;
  font-size: 1.1rem;
  font-weight: 600;
}

.delivery-info-box p {
  color: #e2e8f0;
  font-size: 1rem;
  line-height: 1.6;
  margin: 0;
}

.discount-input-container {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.discount-input-container input {
  flex: 1;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.5px;
}

.discount-apply-btn {
  padding: 14px 20px;
  background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
  border: none;
  border-radius: 12px;
  color: #1e293b;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
  min-width: 100px;
  box-shadow: 0 4px 15px rgba(251, 191, 36, 0.3);
}

.discount-apply-btn:hover:not(:disabled) {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(251, 191, 36, 0.4);
}

.discount-apply-btn:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.discount-message {
  padding: 12px;
  border-radius: 8px;
  font-size: 0.9rem;
  font-weight: 500;
  margin-top: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.discount-message.success {
  background: rgba(16, 185, 129, 0.1);
  border: 1px solid rgba(16, 185, 129, 0.3);
  color: #10b981;
}

.discount-message.success::before {
  content: "✅";
}

.discount-message.error {
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid rgba(239, 68, 68, 0.3);
  color: #ef4444;
}

.discount-message.error::before {
  content: "❌";
}

.discount-help {
  margin-top: 1rem;
  padding: 1rem;
  background: rgba(251, 191, 36, 0.05);
  border-radius: 8px;
  border: 1px solid rgba(251, 191, 36, 0.1);
}

.discount-help p {
  color: #94a3b8;
  font-size: 0.85rem;
  margin: 0;
  text-align: center;
  font-style: italic;
}

.applied-discount {
  margin-top: 1rem;
  padding: 1rem;
  background: rgba(16, 185, 129, 0.1);
  border: 2px solid rgba(16, 185, 129, 0.3);
  border-radius: 12px;
}

.discount-success {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: #10b981;
  font-weight: 600;
}

.success-icon {
  font-size: 1.2em;
}

.discount-amount {
  margin-left: auto;
  font-size: 1.1em;
  font-weight: 700;
}

.terms-agreement {
  background: rgba(15, 23, 42, 0.6);
  border-radius: 12px;
  padding: 1.5rem;
  border: 2px solid rgba(59, 130, 246, 0.2);
  transition: all 0.3s ease;
}

.terms-checkbox {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  cursor: pointer;
}

.terms-checkbox input[type="checkbox"] {
  width: auto;
  min-width: 20px;
  height: 20px;
  margin: 0;
  cursor: pointer;
  accent-color: #3b82f6;
  transform: scale(1.1);
}

.terms-checkbox label {
  margin: 0;
  color: #e2e8f0;
  line-height: 1.5;
  cursor: pointer;
  font-size: 1rem;
}

.privacy-link {
  color: #06b6d4;
  text-decoration: underline;
  font-weight: 500;
  transition: color 0.3s ease;
}

.privacy-link:hover {
  color: #0284c7;
}

.info-box {
  background: rgba(6, 182, 212, 0.1);
  border: 2px solid rgba(6, 182, 212, 0.3);
  border-radius: 12px;
  padding: 1.5rem;
  transition: all 0.3s ease;
}

.info-box:hover {
  background: rgba(6, 182, 212, 0.15);
  transform: translateY(-2px);
}

.info-box h4 {
  color: #06b6d4;
  margin-bottom: 1rem;
  font-weight: 600;
}

.info-box h4::before {
  content: "ℹ️";
  margin-right: 0.5rem;
}

.info-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

.info-list li {
  padding: 0.5rem 0;
  color: #cbd5e1;
  line-height: 1.5;
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
}

.info-list li::before {
  content: "✓";
  color: #10b981;
  font-weight: bold;
  font-size: 1.1em;
  margin-top: 0.1rem;
  flex-shrink: 0;
}

.contact-link {
  color: #06b6d4;
  text-decoration: none;
  font-weight: 600;
  transition: color 0.3s ease;
}

.contact-link:hover {
  text-decoration: underline;
  color: #0284c7;
}

.checkout-actions {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-bottom: 2rem;
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 16px 24px;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  text-decoration: none;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, 
    transparent, 
    rgba(255, 255, 255, 0.2), 
    transparent);
  transition: left 0.4s ease;
  pointer-events: none;
}

.btn:hover::before {
  left: 100%;
}

.checkout-btn {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  color: white;
  font-size: 18px;
  padding: 18px 24px;
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
  min-height: 60px;
}

.checkout-btn:hover:not(:disabled) {
  background: linear-gradient(135deg, #059669 0%, #047857 100%);
  transform: translateY(-2px);
  box-shadow: 0 15px 35px rgba(16, 185, 129, 0.4);
}

.checkout-btn:disabled {
  opacity: 0.8;
  cursor: not-allowed;
  transform: none;
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.2);
}

.button-loading {
  display: none;
  align-items: center;
  gap: 0.5rem;
  justify-content: center;
}

.loading-spinner {
  width: 18px;
  height: 18px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.continue-shopping {
  background: rgba(107, 114, 128, 0.8);
  color: white;
  border: 1px solid rgba(156, 163, 175, 0.3);
}

.continue-shopping:hover {
  background: rgba(75, 85, 99, 0.9);
  transform: translateY(-1px);
}

.empty-cart {
  text-align: center;
  background: rgba(30, 41, 59, 0.4);
  backdrop-filter: blur(25px) saturate(180%);
  padding: 60px 40px;
  border-radius: 24px;
  box-shadow: 
    0 20px 50px rgba(0,0,0,0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(59, 130, 246, 0.2);
}

.empty-cart-icon {
  font-size: 4rem;
  margin-bottom: 20px;
  opacity: 0.7;
}

.empty-cart h2 {
  margin-bottom: 16px;
  color: #e2e8f0;
  font-size: 2rem;
  font-weight: 600;
}

.empty-cart p {
  margin-bottom: 24px;
  color: #cbd5e1;
  font-size: 1.1rem;
  line-height: 1.6;
}

.empty-cart .btn {
  background: linear-gradient(135deg, #3b82f6 0%, #06b6d4 100%);
  color: white;
  padding: 16px 32px;
  font-size: 1.1rem;
}

.empty-cart .btn:hover {
  background: linear-gradient(135deg, #2563eb 0%, #0284c7 100%);
  transform: translateY(-2px);
}

/* Success notification animation */
@keyframes slideInRight {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Mobile Responsiveness */
@media (max-width: 1024px) {
  .cart-layout {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  
  .checkout-section {
    order: -1;
  }
}

@media (max-width: 768px) {
  .cart-page {
    padding-top: 70px;
    padding-bottom: 20px;
  }
  
  .cart-title,
  .cart-page h1 {
    font-size: 2rem;
    margin-bottom: 30px;
  }
  
  .card {
    padding: 1.5rem;
    margin-bottom: 1.5rem;
  }
  
  .form-row {
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }
  
  .item-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
  
  .item-price {
    align-items: flex-start;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;
  }
  
  .empty-cart {
    padding: 40px 20px;
  }
  
  .empty-cart h2 {
    font-size: 1.5rem;
  }
  
  .discount-input-container {
    flex-direction: column;
  }
  
  .discount-apply-btn {
    min-width: unset;
    width: 100%;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 0 10px;
  }
  
  .card {
    padding: 1rem;
  }
  
  .cart-title,
  .cart-page h1 {
    font-size: 1.75rem;
    margin-bottom: 20px;
  }
  
  .checkout-btn {
    font-size: 16px;
    padding: 16px 20px;
    min-height: 56px;
  }
  
  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 12px;
  }
}
</style>
